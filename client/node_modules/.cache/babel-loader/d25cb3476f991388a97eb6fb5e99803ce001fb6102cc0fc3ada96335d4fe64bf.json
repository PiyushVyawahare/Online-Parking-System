{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piyus\\\\Desktop\\\\Online+Parking+System\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkTheme = createTheme({\n  palette: {\n    mode,\n    ...(mode === 'light' ? {\n      // palette values for light mode\n      primary: amber,\n      divider: amber[200],\n      text: {\n        primary: grey[900],\n        secondary: grey[800]\n      }\n    } : {\n      // palette values for dark mode\n      primary: deepOrange,\n      divider: deepOrange[700],\n      background: {\n        default: deepOrange[900],\n        paper: deepOrange[900]\n      },\n      text: {\n        primary: '#fff',\n        secondary: grey[500]\n      }\n    })\n  }\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst [mode, setMode] = React.useState('dark');\nconst toggleColorMode = () => {\n  setMode('light');\n};\nroot.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        ml: 1\n      },\n      onClick: toggleColorMode,\n      color: \"inherit\",\n      children: darkTheme.palette.mode === 'dark' ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","CssBaseline","ThemeProvider","createTheme","IconButton","Brightness4Icon","Brightness7Icon","darkTheme","palette","mode","primary","amber","divider","text","grey","secondary","deepOrange","background","default","paper","root","createRoot","document","getElementById","setMode","useState","toggleColorMode","render","ml"],"sources":["C:/Users/piyus/Desktop/Online+Parking+System/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nconst darkTheme = createTheme({\n  palette: {\n    mode,\n    ...(mode === 'light'\n      ? {\n          // palette values for light mode\n          primary: amber,\n          divider: amber[200],\n          text: {\n            primary: grey[900],\n            secondary: grey[800],\n          },\n        }\n      : {\n          // palette values for dark mode\n          primary: deepOrange,\n          divider: deepOrange[700],\n          background: {\n            default: deepOrange[900],\n            paper: deepOrange[900],\n          },\n          text: {\n            primary: '#fff',\n            secondary: grey[500],\n          },\n        }),\n  },\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst [mode, setMode] = React.useState('dark');\nconst toggleColorMode = () =>{\n  setMode('light');\n}\nroot.render(\n  <BrowserRouter>\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <IconButton sx={{ ml: 1 }} onClick={toggleColorMode} color=\"inherit\">\n        {darkTheme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n      </IconButton>\n      <App />\n    </ThemeProvider>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;AACjE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,eAAe,MAAM,iCAAiC;AAAC;AAC9D,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,OAAO,EAAE;IACPC,IAAI;IACJ,IAAIA,IAAI,KAAK,OAAO,GAChB;MACE;MACAC,OAAO,EAAEC,KAAK;MACdC,OAAO,EAAED,KAAK,CAAC,GAAG,CAAC;MACnBE,IAAI,EAAE;QACJH,OAAO,EAAEI,IAAI,CAAC,GAAG,CAAC;QAClBC,SAAS,EAAED,IAAI,CAAC,GAAG;MACrB;IACF,CAAC,GACD;MACE;MACAJ,OAAO,EAAEM,UAAU;MACnBJ,OAAO,EAAEI,UAAU,CAAC,GAAG,CAAC;MACxBC,UAAU,EAAE;QACVC,OAAO,EAAEF,UAAU,CAAC,GAAG,CAAC;QACxBG,KAAK,EAAEH,UAAU,CAAC,GAAG;MACvB,CAAC;MACDH,IAAI,EAAE;QACJH,OAAO,EAAE,MAAM;QACfK,SAAS,EAAED,IAAI,CAAC,GAAG;MACrB;IACF,CAAC;EACP;AACF,CAAC,CAAC;AACF,MAAMM,IAAI,GAAGvB,QAAQ,CAACwB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjE,MAAM,CAACd,IAAI,EAAEe,OAAO,CAAC,GAAG5B,KAAK,CAAC6B,QAAQ,CAAC,MAAM,CAAC;AAC9C,MAAMC,eAAe,GAAG,MAAK;EAC3BF,OAAO,CAAC,OAAO,CAAC;AAClB,CAAC;AACDJ,IAAI,CAACO,MAAM,eACT,QAAC,aAAa;EAAA,uBACZ,QAAC,aAAa;IAAC,KAAK,EAAEpB,SAAU;IAAA,wBAC9B,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,UAAU;MAAC,EAAE,EAAE;QAAEqB,EAAE,EAAE;MAAE,CAAE;MAAC,OAAO,EAAEF,eAAgB;MAAC,KAAK,EAAC,SAAS;MAAA,UACjEnB,SAAS,CAACC,OAAO,CAACC,IAAI,KAAK,MAAM,gBAAG,QAAC,eAAe;QAAA;QAAA;QAAA;MAAA,QAAG,gBAAG,QAAC,eAAe;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACnE,eACb,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA;AACO;EAAA;EAAA;EAAA;AAAA,QACF,CACjB;;AAED;AACA;AACA;AACAV,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}