{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piyus\\\\Desktop\\\\Online+Parking+System\\\\client\\\\src\\\\pages\\\\map\\\\map.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { useEffect } from 'react';\nimport api from '../../api';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomMarker = _ref => {\n  let {\n    text,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'white',\n      background: 'grey',\n      padding: '15px 10px',\n      display: 'inline-flex',\n      textAlign: 'center',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: '100%',\n      transform: 'translate(-50%, -50%)'\n    },\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n_c = CustomMarker;\nconst Map = () => {\n  _s();\n  const [parkings, setParkings] = useState(null);\n  function onLoad() {\n    api.get(\"/getParkings\", {\n      withCredentials: true\n    }).then(res => {\n      setParkings(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  useEffect(() => {\n    onLoad();\n  }, []);\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\n  const [selectedLocation, setSelectedLocation] = React.useState(null);\n  const openPopup = location => {\n    setSelectedLocation(location);\n    setIsPopupOpen(true);\n  };\n  const closePopup = () => {\n    setIsPopupOpen(false);\n  };\n  const onSelected = () => {\n    closePopup();\n    console.log(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyDRA8KWu6hfAC7vyYG8h4FQ48UzNymOjUc'\n      },\n      defaultCenter: {\n        lat: 18.622761,\n        lng: 73.741953\n      },\n      defaultZoom: 13,\n      children: parkings === null || parkings === void 0 ? void 0 : parkings.map(location => /*#__PURE__*/_jsxDEV(CustomMarker, {\n        lat: location.plat,\n        lng: location.plng,\n        text: location.pname,\n        onClick: () => openPopup(location)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), isPopupOpen && selectedLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        background: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected location: \", selectedLocation.pname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closePopup,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSelected,\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"e8H48FHnMpeZ7/zPKkWkpdtA9pc=\");\n_c2 = Map;\nexport default Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomMarker\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","GoogleMapReact","useEffect","api","useState","CustomMarker","text","onClick","color","background","padding","display","textAlign","alignItems","justifyContent","borderRadius","transform","Map","parkings","setParkings","onLoad","get","withCredentials","then","res","data","console","log","catch","err","isPopupOpen","setIsPopupOpen","selectedLocation","setSelectedLocation","openPopup","location","closePopup","onSelected","height","width","key","lat","lng","map","plat","plng","pname","position","top","left"],"sources":["C:/Users/piyus/Desktop/Online+Parking+System/client/src/pages/map/map.js"],"sourcesContent":["import React from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { useEffect } from 'react';\r\nimport api from '../../api';\r\nimport { useState } from 'react';\r\n\r\nconst CustomMarker = ({ text, onClick }) => (\r\n  <div style={{\r\n    color: 'white',\r\n    background: 'grey',\r\n    padding: '15px 10px',\r\n    display: 'inline-flex',\r\n    textAlign: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: '100%',\r\n    transform: 'translate(-50%, -50%)'\r\n  }} onClick={onClick}>\r\n    {text}\r\n  </div>\r\n);\r\n\r\nconst Map = () => {\r\n  const [parkings, setParkings] = useState(null)\r\n\r\n  function onLoad(){\r\n    api.get(\"/getParkings\", {withCredentials: true})\r\n    .then(res=>{\r\n      setParkings(res.data);\r\n      console.log(res.data);\r\n    })\r\n    .catch(err=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    onLoad();\r\n  }, [])\r\n\r\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\r\n  const [selectedLocation, setSelectedLocation] = React.useState(null);\r\n\r\n  const openPopup = location => {\r\n    setSelectedLocation(location);\r\n    setIsPopupOpen(true);\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setIsPopupOpen(false);\r\n  };\r\n\r\n  const onSelected = () => {\r\n    closePopup()\r\n    console.log(1)\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: '100vh', width: '100%' }}>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: 'AIzaSyDRA8KWu6hfAC7vyYG8h4FQ48UzNymOjUc' }}\r\n        defaultCenter={{ lat: 18.622761, lng:  73.741953 }}\r\n        defaultZoom={13}\r\n      >\r\n        {parkings?.map(location => (\r\n          <CustomMarker lat={location.plat} lng={location.plng} text={location.pname} onClick={() => openPopup(location)} />\r\n        ))}\r\n      </GoogleMapReact>\r\n      {isPopupOpen && selectedLocation && (\r\n        <div style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', background: 'white' }}>\r\n          <p>Selected location: {selectedLocation.pname}</p>\r\n          <button onClick={closePopup}>Close</button>\r\n          <button onClick={onSelected}>Select</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}